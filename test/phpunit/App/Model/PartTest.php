<?php

namespace App\Model;

//use PHPUnit\Framework\TestCase;
use App\Model\IndexedModelTest;
use App\Model\Part;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2017-06-13 at 22:23:19.
 */
class PartTest extends IndexedModelTest {

    /**
     * @var Part
     */
    protected $object;
    protected $data;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        // given the object constructor accepts initiailisation
        // data in an array, this technique might just new crap
        // and tbh sjouldn't work
        $this->data = [
            'id' => 1,
            'partNumber' => 'foo',
            'description' => 'Test Part'
        ];
        $this->object = new Part($this->data);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {

    }

    /**
     * @covers App\Model\Part::getPartNumber
     * @todo   Implement testGetPartNumber().
     */
    public function testGetPartNumber() {
        // assert attribute exists in object
        $this->assertClassHasAttribute('partNumber', get_class($this->object));
        // assert attribute exists
        $this->assertObjectHasAttribute('partNumber', $this->object);
        // assert attribute has expected type and value
        $this->assertSame($this->data['partNumber'], $this->object->getPartNumber());
    }

    /**
     * @covers App\Model\Part::getDescription
     * @todo   Implement testGetDescription().
     */
    public function testGetDescription() {
        // assert attribute exists in object
        $this->assertClassHasAttribute('description', get_class($this->object));
        // assert attribute exists
        $this->assertObjectHasAttribute('description', $this->object);
        // assert attribute has expected type and value
        $this->assertSame($this->data['description'], $this->object->getDescription());
    }

    /**
     * @covers App\Model\Part::setPartNumber
     * @todo   Implement testSetPartNumber().
     */
    public function testSetPartNumber() {
        $data = 'bar';
        // test fluent interface
        $this->assertEquals($this->object, $this->object->setPartNumber($data));
        // test object value
        $this->assertEquals($data, $this->object->getPartNumber());
    }

    /**
     * @covers App\Model\Part::setDescription
     * @todo   Implement testSetDescription().
     */
    public function testSetDescription() {
        $data = 'Test Label';
        // test fluent interface
        $this->assertEquals($this->object, $this->object->setDescription($data));
        // test object value
        $this->assertEquals($data, $this->object->getDescription());
    }

}
